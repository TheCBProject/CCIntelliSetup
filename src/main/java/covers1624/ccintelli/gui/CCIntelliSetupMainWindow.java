/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package covers1624.ccintelli.gui;

import covers1624.ccintelli.launch.Launch;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import java.awt.event.*;
import java.io.File;

/**
 * @author brand
 */
public class CCIntelliSetupMainWindow extends javax.swing.JFrame {

    /**
     * Creates new form CCIntelliSetupMainWindow
     */
    public CCIntelliSetupMainWindow() {
        initComponents();

        workspaceDirField.setText(Launch.WORKSPACE.getAbsolutePath());
        moduleDirField.setText(Launch.MODULES.getAbsolutePath());
        runDirField.setText(Launch.PROJECT_RUN.getAbsolutePath());
        compilerOutDirField.setText(Launch.PROJECT_OUTPUT.getAbsolutePath());
        compilerSelector.setSelectedItem(Launch.COMPILER_SELECT);
        addNonNullAssertionsCheckbox.setSelected(Launch.NOT_NULL_ASSERTIONS);

        setTitle("TODO... @Covers you can set this in the constructor.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        mainPanel = new JPanel();
        mainTabbedPane = new JTabbedPane();
        setupPanel = new JPanel();
        setupLabel = new JLabel();
        leftSetupPanel = new JPanel();
        jLabel3 = new JLabel();
        workspaceDirField = new JTextField();
        workspaceDirSelect = new JButton();
        jLabel4 = new JLabel();
        moduleDirField = new JTextField();
        moduleDirSelect = new JButton();
        jLabel5 = new JLabel();
        runDirSelect = new JButton();
        runDirField = new JTextField();
        compilerOutDirSelect = new JButton();
        compilerOutDirField = new JTextField();
        jLabel6 = new JLabel();
        rightSetupPanel = new JPanel();
        jLabel2 = new JLabel();
        compilerSelector = new JComboBox<>();
        jLabel1 = new JLabel();
        addNonNullAssertionsCheckbox = new JCheckBox();
        modulePanel = new JPanel();
        leftModulePanel = new JPanel();
        jScrollPane1 = new JScrollPane();
        moduleTree = new JTree();
        addModuleField = new JTextField();
        addModuleButton = new JButton();
        jPanel1 = new JPanel();
        jLabel7 = new JLabel();
        selectedModuleDirectoryField = new JTextField();
        jLabel8 = new JLabel();
        jScrollPane2 = new JScrollPane();
        selectedModuleSourceList = new JList<>();
        addModuleSrc = new JButton();
        removeModuleSrc = new JButton();
        editModuleSrc = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        setupLabel.setHorizontalAlignment(SwingConstants.CENTER);
        setupLabel.setText("All the setup stuff.");
        setupLabel.setHorizontalTextPosition(SwingConstants.CENTER);

        leftSetupPanel.setBorder(BorderFactory.createEtchedBorder());

        jLabel3.setText("Workspace directory:");

        workspaceDirField.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                workspaceDirFieldKeyReleased(evt);
            }
        });

        workspaceDirSelect.setText("...");
        workspaceDirSelect.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                workspaceDirSelectActionPerformed(evt);
            }
        });

        jLabel4.setText("Module directory:");

        moduleDirField.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                moduleDirFieldKeyReleased(evt);
            }
        });

        moduleDirSelect.setText("...");
        moduleDirSelect.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                moduleDirSelectActionPerformed(evt);
            }
        });

        jLabel5.setText("Run directory:");

        runDirSelect.setText("...");
        runDirSelect.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                runDirSelectActionPerformed(evt);
            }
        });

        runDirField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                runDirFieldActionPerformed(evt);
            }
        });
        runDirField.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                runDirFieldKeyReleased(evt);
            }
        });

        compilerOutDirSelect.setText("...");
        compilerOutDirSelect.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                compilerOutDirSelectActionPerformed(evt);
            }
        });

        compilerOutDirField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                compilerOutDirFieldActionPerformed(evt);
            }
        });
        compilerOutDirField.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                compilerOutDirFieldKeyReleased(evt);
            }
        });

        jLabel6.setText("Compiler output directory:");

        GroupLayout leftSetupPanelLayout = new GroupLayout(leftSetupPanel);
        leftSetupPanel.setLayout(leftSetupPanelLayout);
        leftSetupPanelLayout.setHorizontalGroup(leftSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(leftSetupPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(leftSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(leftSetupPanelLayout.createSequentialGroup()
                                        .addComponent(workspaceDirField)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(workspaceDirSelect))
                                .addGroup(leftSetupPanelLayout.createSequentialGroup()
                                        .addComponent(moduleDirField)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(moduleDirSelect))
                                .addGroup(leftSetupPanelLayout.createSequentialGroup()
                                        .addComponent(runDirField)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(runDirSelect))
                                .addGroup(leftSetupPanelLayout.createSequentialGroup()
                                        .addComponent(compilerOutDirField)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(compilerOutDirSelect))
                                .addGroup(leftSetupPanelLayout.createSequentialGroup()
                                        .addGroup(leftSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel6))
                                        .addGap(0, 264, Short.MAX_VALUE)))
                        .addContainerGap())
        );
        leftSetupPanelLayout.setVerticalGroup(leftSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(leftSetupPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(workspaceDirField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(workspaceDirSelect))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(moduleDirField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(moduleDirSelect))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(runDirField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(runDirSelect))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(compilerOutDirField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(compilerOutDirSelect))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightSetupPanel.setBorder(BorderFactory.createEtchedBorder());

        jLabel2.setText("Compiler select:");

        compilerSelector.setModel(new DefaultComboBoxModel<>(new String[] { "Eclipse", "Javac" }));
        compilerSelector.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                compilerSelectorActionPerformed(evt);
            }
        });

        jLabel1.setText("Add Not-Null Assertions");

        addNonNullAssertionsCheckbox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                addNonNullAssertionsCheckboxActionPerformed(evt);
            }
        });

        GroupLayout rightSetupPanelLayout = new GroupLayout(rightSetupPanel);
        rightSetupPanel.setLayout(rightSetupPanelLayout);
        rightSetupPanelLayout.setHorizontalGroup(rightSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(rightSetupPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(rightSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(rightSetupPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(compilerSelector, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGroup(rightSetupPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(addNonNullAssertionsCheckbox)))
                        .addContainerGap(239, Short.MAX_VALUE))
        );
        rightSetupPanelLayout.setVerticalGroup(rightSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(rightSetupPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(rightSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(compilerSelector, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(rightSetupPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(addNonNullAssertionsCheckbox))
                        .addContainerGap(392, Short.MAX_VALUE))
        );

        GroupLayout setupPanelLayout = new GroupLayout(setupPanel);
        setupPanel.setLayout(setupPanelLayout);
        setupPanelLayout.setHorizontalGroup(setupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(setupPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(setupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(setupPanelLayout.createSequentialGroup()
                                        .addComponent(leftSetupPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rightSetupPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(setupLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
        );
        setupPanelLayout.setVerticalGroup(setupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(GroupLayout.Alignment.TRAILING, setupPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(setupLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(setupPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(rightSetupPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(leftSetupPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
        );

        mainTabbedPane.addTab("Setup", setupPanel);

        leftModulePanel.setBorder(BorderFactory.createEtchedBorder());

        DefaultMutableTreeNode treeNode1 = new DefaultMutableTreeNode("Modules");
        DefaultMutableTreeNode treeNode2 = new DefaultMutableTreeNode("Forge");
        treeNode1.add(treeNode2);
        moduleTree.setModel(new DefaultTreeModel(treeNode1));
        moduleTree.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                moduleTreeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(moduleTree);

        addModuleField.setToolTipText("New Module Name.");
        addModuleField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                addModuleFieldActionPerformed(evt);
            }
        });

        addModuleButton.setText("Add Module");

        GroupLayout leftModulePanelLayout = new GroupLayout(leftModulePanel);
        leftModulePanel.setLayout(leftModulePanelLayout);
        leftModulePanelLayout.setHorizontalGroup(leftModulePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(leftModulePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(leftModulePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1)
                                .addGroup(leftModulePanelLayout.createSequentialGroup()
                                        .addComponent(addModuleField, GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(addModuleButton)))
                        .addContainerGap())
        );
        leftModulePanelLayout.setVerticalGroup(leftModulePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(leftModulePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftModulePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(addModuleField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(addModuleButton)))
        );

        jPanel1.setBorder(BorderFactory.createEtchedBorder());

        jLabel7.setText("Directory:");

        selectedModuleDirectoryField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                selectedModuleDirectoryFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("Src Directorys:");

        jScrollPane2.setViewportView(selectedModuleSourceList);

        addModuleSrc.setText("Add");

        removeModuleSrc.setText("Remove");

        editModuleSrc.setText("Edit");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(selectedModuleDirectoryField)
                                .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel8))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(addModuleSrc)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(removeModuleSrc)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(editModuleSrc)))
                        .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectedModuleDirectoryField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(addModuleSrc)
                                .addComponent(removeModuleSrc)
                                .addComponent(editModuleSrc))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout modulePanelLayout = new GroupLayout(modulePanel);
        modulePanel.setLayout(modulePanelLayout);
        modulePanelLayout.setHorizontalGroup(modulePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(modulePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(leftModulePanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
        );
        modulePanelLayout.setVerticalGroup(modulePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(GroupLayout.Alignment.TRAILING, modulePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(modulePanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(leftModulePanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
        );

        mainTabbedPane.addTab("Module viewer tree", modulePanel);

        GroupLayout mainPanelLayout = new GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(mainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(mainTabbedPane, GroupLayout.Alignment.TRAILING)
        );
        mainPanelLayout.setVerticalGroup(mainPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(mainTabbedPane, GroupLayout.Alignment.TRAILING)
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(mainPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(mainPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Button Events">

    // <editor-fold defaultstate="collapsed" desc="Setup File Fields">

    //Launches the file picker for Workspace Directory
    private void workspaceDirSelectActionPerformed(ActionEvent evt) {
        workspaceDirField.setText(chooseDir(workspaceDirField.getText()));
        Launch.WORKSPACE = new File(workspaceDirField.getText());
    }

    //Launches the file picker for Module Directory
    private void moduleDirSelectActionPerformed(ActionEvent evt) {
        moduleDirField.setText(chooseDir(moduleDirField.getText()));
        Launch.MODULES = new File(moduleDirField.getText());
    }

    //Launches the file picker for Run Directory
    private void runDirSelectActionPerformed(ActionEvent evt) {
        runDirField.setText(chooseDir(runDirField.getText()));
        Launch.PROJECT_RUN = new File(runDirField.getText());
    }

    //Launches the file picker for Out Directory
    private void compilerOutDirSelectActionPerformed(ActionEvent evt) {
        compilerOutDirField.setText(chooseDir(compilerOutDirField.getText()));
        Launch.PROJECT_OUTPUT = new File(compilerOutDirField.getText());
    }

    private void workspaceDirFieldKeyReleased(KeyEvent evt) {
        Launch.WORKSPACE = new File(workspaceDirField.getText());
    }

    private void moduleDirFieldKeyReleased(KeyEvent evt) {
        Launch.MODULES = new File(moduleDirField.getText());
    }

    private void runDirFieldKeyReleased(KeyEvent evt) {
        Launch.PROJECT_RUN = new File(runDirField.getText());
    }

    private void compilerOutDirFieldKeyReleased(KeyEvent evt) {
        Launch.PROJECT_OUTPUT = new File(compilerOutDirField.getText());
    }

    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Compiler & Non-Null">

    private void addNonNullAssertionsCheckboxActionPerformed(ActionEvent evt) {
        Launch.NOT_NULL_ASSERTIONS = addNonNullAssertionsCheckbox.isSelected();
    }

    private void compilerSelectorActionPerformed(ActionEvent evt) {
        Launch.COMPILER_SELECT = compilerSelector.getSelectedItem().toString();
    }

    // </editor-fold>


    private void runDirFieldActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void compilerOutDirFieldActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void moduleTreeMouseClicked(MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void addModuleFieldActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void selectedModuleDirectoryFieldActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }


    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Misc">

    public String chooseDir(String defaultDir) {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        File selectedFile = new File(defaultDir);

        if (selectedFile.exists()) {
            chooser.setCurrentDirectory(selectedFile);
        }

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            selectedFile = chooser.getSelectedFile();
        }

        return selectedFile.getAbsolutePath();
    }

    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Variables">
    // Variables declaration - do not modify                     
    private JButton addModuleButton;
    private JTextField addModuleField;
    private JButton addModuleSrc;
    private JCheckBox addNonNullAssertionsCheckbox;
    private JTextField compilerOutDirField;
    private JButton compilerOutDirSelect;
    private JComboBox<String> compilerSelector;
    private JButton editModuleSrc;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JPanel jPanel1;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JPanel leftModulePanel;
    private JPanel leftSetupPanel;
    private JPanel mainPanel;
    private JTabbedPane mainTabbedPane;
    private JTextField moduleDirField;
    private JButton moduleDirSelect;
    private JPanel modulePanel;
    private JTree moduleTree;
    private JButton removeModuleSrc;
    private JPanel rightSetupPanel;
    private JTextField runDirField;
    private JButton runDirSelect;
    private JTextField selectedModuleDirectoryField;
    private JList<String> selectedModuleSourceList;
    private JLabel setupLabel;
    private JPanel setupPanel;
    private JTextField workspaceDirField;
    private JButton workspaceDirSelect;
    // End of variables declaration                   
    // </editor-fold>
}
